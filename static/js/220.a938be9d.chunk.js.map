{"version":3,"file":"static/js/220.a938be9d.chunk.js","mappings":"4PAOaA,EAAO,WAElB,IAAMC,GAAKC,EAAAA,EAAAA,MACLC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAE5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAqBA,OACE,kBAAMC,SAXa,SAAAC,GAEnB,GADAA,EAAMC,iBACFV,EAAQW,MAAK,SAAAC,GAAI,OAAIA,EAAKR,OAASA,CAAlB,IACnB,OAAOS,MAAM,GAAD,OAAIT,EAAJ,4BAEdN,GAASgB,EAAAA,EAAAA,IAAW,CAAElB,GAAAA,EAAIQ,KAAAA,EAAME,OAAAA,KAChCD,EAAQ,IACRE,EAAU,GACX,EAGC,WACE,8BACE,qCACA,mBACA,kBACEQ,SAzBkB,SAAAN,GACxB,IAAQO,EAAUP,EAAMQ,OAAhBD,MACRX,EAAQW,EACT,EAuBOE,KAAK,OACLd,KAAK,OACLY,MAAOZ,EACPe,YAAY,YACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBACA,8BACE,qCADF,KACsB,mBACpB,kBACEP,SAnCoB,SAAAN,GAC1B,IAAQO,EAAUP,EAAMQ,OAAhBD,MACRT,EAAUS,EACX,EAiCOA,MAAOV,EACPa,YAAY,SACZD,KAAK,MACLd,KAAK,SAGLiB,MAAM,+FACNC,UAAQ,QAGZ,mBACA,mBAAQJ,KAAK,SAAb,8FACA,mBACA,oBAGL,E,UCrEYK,EAAS,WACpB,IAAMzB,GAAWC,EAAAA,EAAAA,MACTyB,GAAWvB,EAAAA,EAAAA,KAAY,SAAAwB,GAAK,OAAIA,EAAMD,MAAV,IAA5BA,OAKR,OACE,kBACET,SANkB,SAAAW,GACpB5B,GAAS6B,EAAAA,EAAAA,GAAmBD,EAAET,OAAOD,OACtC,EAKGA,MAAOQ,EACPL,YAAY,SACZD,KAAK,MACLd,KAAK,UAGV,E,oBCZYwB,EAAW,WACtB,IAAM9B,GAAWC,EAAAA,EAAAA,MAKXyB,GAASvB,EAAAA,EAAAA,IAAY4B,EAAAA,IACrB7B,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtB4B,GAAU7B,EAAAA,EAAAA,KAAY,SAAAwB,GAAK,OAAIA,EAAMvB,SAAS6B,SAAnB,KAEjCC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,IAWJ,OACE,wBACGgC,GACC,SAAC,KAAD,CACEI,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,aAnBRjB,EACKxB,EAAQwB,QAAO,SAAAkB,GAAO,OAC3BA,EAAQtC,KAAKuC,cAAcC,SAASpB,EAAOqB,OADhB,IAIxB7C,GAiBc8C,KAAI,SAAAlC,GAAI,OACvB,2BACE,yBACGA,EAAKR,KADR,KACgBQ,EAAKN,WAErB,mBAAQyC,QAAS,kBAxCNnD,EAwCyBgB,EAAKhB,GAvCjDE,GAASkD,EAAAA,EAAAA,IAAcpD,SACvBE,GAASmD,EAAAA,EAAAA,IAAmBrD,IAFT,IAAAA,CAwCM,EAAjB,sBAJOgB,EAAKhB,GADS,KAWhC,EChDc,SAASsD,IAStB,OACE,iCACE,SAACvD,EAAD,KAEA,SAAC4B,EAAD,KACA,SAACK,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Phonebook/operations';\n// import css from './ContactsForm.module.css';\nimport { contacts } from '../../redux/selector';\n\nexport const Form = () => {\n    \n  const id = nanoid();\n  const dispatch = useDispatch();\n  const contact = useSelector(contacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const hendlerChangeName = event => {\n    const { value } = event.target;\n    setName(value);\n  };\n  const hendlerChangeNumber = event => {\n    const { value } = event.target;\n    setNumber(value);\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n    if (contact.some(item => item.name === name)) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ id, name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <label>\n        <span> Name</span>\n        <br />\n        <input\n          onChange={hendlerChangeName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name User\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <br />\n      <label>\n        <span>Number</span> <br />\n        <input\n          onChange={hendlerChangeNumber}\n          value={number}\n          placeholder=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // pattern=\"[\\+]\\d{3}\\s[\\(]\\d{2}[\\)]\\s\\d{3}[\\-]\\d{2}[\\-]\\d{2}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <br />\n      <button type=\"submit\">Додати контакт</button>\n      <br />\n      <br />\n    </form>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { phoneFilterContact } from '../../redux/Phonebook/sliceFilter';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(state => state.filter);\n  const hendlerChange = e => {\n    dispatch(phoneFilterContact(e.target.value));\n  };\n\n  return (\n    <input\n      onChange={hendlerChange}\n      value={filter}\n      placeholder=\"filter\"\n      type=\"tel\"\n      name=\"filter\"\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/Phonebook/operations';\nimport { phoneDeleteContact } from '../../redux/Phonebook/slicePhonebook';\nimport { contacts, filters } from '../../redux/selector';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const hendelDelete = id => {\n    dispatch(deleteContact(id));\n    dispatch(phoneDeleteContact(id));\n  };\n  const filter = useSelector(filters);\n  const contact = useSelector(contacts);\n  const loading = useSelector(state => state.contacts.isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    if (filter) {\n      return contact.filter(element =>\n        element.name.toLowerCase().includes(filter.trim())\n      );\n    }\n    return contact;\n  };\n\n  return (\n    <ul>\n      {loading ? (\n        <MagnifyingGlass\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"MagnifyingGlass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"MagnifyingGlass-wrapper\"\n          glassColor=\"#c0efff\"\n          color=\"#e15b64\"\n        />\n      ) : (\n        filterContacts().map(item => (\n          <li key={item.id}>\n            <p>\n              {item.name}: {item.number}\n            </p>\n            <button onClick={() => hendelDelete(item.id)}>Delete</button>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Form } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Contacts } from '../../components/Contacts/Contacts';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getCurrent } from 'redux/auth/auth-operation';\n\nexport default function ContactsPage() {\n  // const { contacts } = useSelector(state => state.contacts);\n  // const dispatch = useDispatch();\n  // useEffect(() => {\n  //   if (contacts.length === 0) {\n  //     return;\n  //   }\n  //   dispatch(getCurrent());\n  // }, [dispatch, contacts]);\n  return (\n    <>\n      <Form />\n\n      <Filter />\n      <Contacts />\n    </>\n  );\n}\n"],"names":["Form","id","nanoid","dispatch","useDispatch","contact","useSelector","contacts","useState","name","setName","number","setNumber","onSubmit","event","preventDefault","some","item","alert","addContact","onChange","value","target","type","placeholder","pattern","title","required","Filter","filter","state","e","phoneFilterContact","Contacts","filters","loading","isLoading","useEffect","fetchContacts","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","element","toLowerCase","includes","trim","map","onClick","deleteContact","phoneDeleteContact","ContactsPage"],"sourceRoot":""}