{"version":3,"file":"static/js/876.0ad0f3e0.chunk.js","mappings":"8NAIMA,GAAeC,E,QAAAA,KA8BrB,GA7BYC,EAAAA,EAAAA,GAAU,CACpBF,aAAAA,EACAG,iBAAkB,cAClBC,kBAAmBC,EAAAA,EAAAA,W,mBCPrB,EAAuB,4B,6BCOR,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA+BF,EAAAA,EAAAA,UAAS,IAAxC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,CACnBN,MAAOC,EACPC,SAAUC,GAENI,EAAgB,SAAAC,GACpBF,EAAaE,EAAEC,OAAOC,MAAMF,EAAEC,OAAOE,MAAMC,OAC5C,EAOD,OACE,UAAC,EAAD,CACEC,SARiB,SAAAL,GACnBA,EAAEM,iBAEF,IAAMC,EAAW,CAAEf,MAAAA,EAAOE,SAAAA,GAC1BE,GAASY,EAAAA,EAAAA,IAAWD,GACrB,EAIGE,UAAWC,EACXC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,SAEpCC,YAAU,EACVC,aAAa,MARf,WAUE,SAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,QAAQ,WACRC,MAAM,QACNlB,KAAK,QACLmB,SAAUtB,EACVI,MAAOX,KAET,SAACyB,EAAA,EAAD,CACEC,GAAG,iBACHhB,KAAK,WACLkB,MAAM,WACND,QAAQ,WACRE,SAAUtB,EACVI,MAAOT,KAET,SAAC4B,EAAA,EAAD,CAAQH,QAAQ,YAAYI,KAAK,SAAjC,wCAKL,C","sources":["../node_modules/@mui/material/esm/Box/Box.js","webpack://react-homework-template/./src/pages/Authorization/Authorization.module.css?c385","pages/Authorization/Authorization.jsx"],"sourcesContent":["import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Authorization_form__F8f2V\"};","import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useDispatch } from 'react-redux';\nimport css from './Authorization.module.css';\nimport { Button } from '@mui/material';\nimport { loginUsers } from 'redux/auth/auth-operation';\n\nexport default function Authorization() {\n  const [email, setEmail] = useState('');\n  const [password, setPasword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const initDataUser = {\n    email: setEmail,\n    password: setPasword,\n  };\n  const handelChanche = e => {\n    initDataUser[e.target.name](e.target.value.trim());\n  };\n  const handelSubmit = e => {\n    e.preventDefault();\n\n    const userData = { email, password };\n    dispatch(loginUsers(userData));\n  };\n  return (\n    <Box\n      onSubmit={handelSubmit}\n      className={css.form}\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        label=\"Email\"\n        name=\"email\"\n        onChange={handelChanche}\n        value={email}\n      />\n      <TextField\n        id=\"outlined-basic\"\n        name=\"password\"\n        label=\"Password\"\n        variant=\"outlined\"\n        onChange={handelChanche}\n        value={password}\n      />\n      <Button variant=\"contained\" type=\"submit\">\n        Вхід\n      </Button>\n    </Box>\n  );\n}\n"],"names":["defaultTheme","createTheme","createBox","defaultClassName","generateClassName","ClassNameGenerator","Authorization","useState","email","setEmail","password","setPasword","dispatch","useDispatch","initDataUser","handelChanche","e","target","name","value","trim","onSubmit","preventDefault","userData","loginUsers","className","css","component","sx","m","width","noValidate","autoComplete","TextField","id","variant","label","onChange","Button","type"],"sourceRoot":""}